第一次被离职：
  沙盒，原因：1、不符合期望，缺乏技术攻坚能力（不能快速解决ANR、奔溃问题），被要求推动优化整个项目（1个月内没有看到产出）；部门
            2、缺乏主动性、沟通、交流（及时反馈问题）；组内
  我对原因的看法：1、要求在我手下就不能有不能解决的问题，这对目前的我是不可能的；
               2、有点怕和别人的交流，这是一个缺点，要去克服它，以后要多多交流
               3、个人总结自己的问题有点大，下次注意
  对第一次跳槽的公司的印象：
               1、没有划水的空间，要求把时间百分百投入到工作（早9晚9，时间线拉的太长，要求时刻全身心的投入，个人认为不太可能）；
               2、组内加班严重，9点下班基本上9：30才有人走，以后大概率加班；
               3、对部门管理方式反感（日报、周报、不伦不类的敏捷开发、OKR），不知是所有公司都这样；
               4、严重挤占个人时间，个人缺乏时间去提升（看书、写练习项目等），娱乐时间、看书时间、视频聊天时间等必须只能有其一；
               5、项目代码比较烂，没有新的特别认可想学习的东西，缺乏新东西（kotlin、flutter、音视频等）
               
个人发展：
  1、持续学习，提升技术攻坚能力，积极主动的去交流、反馈、沟通；
  2、不能再怕交流了，放下脸皮去做事；
  2、要考虑最严重的情况，以后找不到工作了该怎么办？
  3、副业？side project？

面试1（图匠数据）：
  1、事件分发（没有讲完整）；
  2、GC内存回收机制；
  3、HTTP协议；
  4、HTTPS；
  5、序列化，为什么要序列化；
  6、StringBuffer与String的区别；
  感觉公司环境有点压抑（办公室小），对面试官的感觉也不好（对人愛搭不理的），个人应答也不好（后面协议没有回答上）
 
 面试2（互动派）：
  1、Activity启动模式；
  2、网络请求框架相关的封装；
  3、socket的使用；
  4、进程间通信；
  5、TCP、UDP协议的区别；
  6、打包的优化；
  7、MVVM（讲错了）；
  8、离职原因；
  9、应用市场上架的注意事项；
  10、屏幕适配；
  公司环境不错，1楼而且宽敞，对面试官和经理的感觉也还好
  
  这两场面试，对个人表现的感觉是表达不太好，有些问题一直在绕来饶去，没有直奔主题，有些东西回答的含糊不清
  
面试3（博纳德）：
  1、离职原因（1个月）；
  2、项目搭建构成（架构模式与框架选型）；
  3、MVP、MVVM；
  4、Eventbus与广播的区别（广播的系统开销）；
  5、Glide缓存机制、Retrofit内部设计（动态代理，静态代理最主要的一个点）；
  6、LinkedHashMap的作用（最大的优点？实现lrucache）、HashMap原理；
  7、软件优化（性能优化、内存优化）；
  8、Kotlin的使用；
  9、反射的原理，使用场景；
  10、源码的阅读情况；
  11、遇到过最难解决的问题；
  12、图片压缩；BitmapFactory.options.inSampleSize，inJustDecodeBounds = true（只获取图片大小类型），减小分辨率；编码方式：ARGB_8888该为RGB_565，降低像素质量（内存占用）；Bitmap.compress方法，压缩质量
  看简历问问题，问的多而且比较杂，面试体验比较好，导致自我感觉也比较好？
  个人反思是很多东西只是见过和使用过，不了解其实现原理，或者没有找到其最大的优点

面试4（小迈）：
  1、MVVM的优缺点（缺点不知，优点没答好？）；
  2、滑动冲突的解决（没答好）ViewGroup拦截，子View消费事件，requestDisal；
  3、Glide生命周期的检测方式，缓存机制（3级缓存，ActiveResource、内存缓存、磁盘缓存）；无UI的Fragment
  4、图片裁剪，使用的API等；--canvas.drawRoundRect与BitmapShader或paint.setXfermode(DST_IN)，配合使用
  5、布局优化，约束布局的使用场景时机；
  对面试官感觉还行，公司环境也还好，很多问题没有答上，基本上是挂了

    线程状态：New（新创建、初始状态）、Runnable（运行状态/就绪）、Blocked（阻塞，IO、wait、锁等）、Waiting（等待状态）、timed_waiting（超时等待）、terminated（终止状态，执行完毕）
    线程的4种创建方式：Runnable、继承Thread、Callable的call方法（有返回值，使用Future接口的get方法获取结果，ExecutorService.submit()返回Future对象）、线程池
    FutureTask实现了runnable、Future接口，在run方法中执行了callcale的call方法
    线程执行完毕后会调用notify唤醒其他线程（在底层源码中实现）
    Synchronized锁定范围最小化

 面试5（虎牙-27分钟）：
  1、Handler如何处理延时消息（消息队列中消息按时间依次排序，执行到延时消息时若未到时间将再次进入阻塞状态（nativePollOnce））
  2、线程的启动方式（Runnable与new Thread的区别）; Thread也是实现Runnable接口的，在Thread的run方法中，执行传入的Runnable接口的run方法，
	Thread.join（等待线程执行完毕）方法内部调有wait方法，使一个线程等待一段时间（不使线程死亡）;
	Thread.yield，暂停当前正在执行的线程，以执行其他线程，使当前线程状态回到可运行状态，以使具有相同优先级的其他线程获得运行的机会，无法保证真的会被运行，由线程调度器决定
  3、多线程（锁的了解，Lock等）,ReentrantLock（可重入锁，支持一个线程对资源重复加锁，信号量，state为0时表示锁成功释放，获取时加1，释放时减1）
  4、volatile与synchronized（JVM对锁的安全性、效率的处理）详解
  5、线程sleep与wait的区别；Sleep不会使线程丢失锁（monitor）当前线程仍然时可执行状态（持有资源），wait（等待时间到或被notify） 线程得持有当前wait对象的锁
	wait使线程进入等待状态，唤醒后会重新去竞争资源； notify 线程的持有notify所属对象的锁，只能唤醒一个线程
  6、卡顿优化--UI绘制优化（Systrace、TraceView、BlockCanary）
  7、单例模式
  8、MVVM、MVP、MVC
  9、ConcurrentHashMap：用于解决并发问题，transient、volatile（put数据时数据同步，可见性）、CAS（CompareAndSwap，在put操作key对应数组位置的头结点Node为NULL时使用CAS写入）、Synchronized（put操作头结点不为NULL时使用加锁）
  10、线程池的关键参数，线程池怎么取消任务；取消任务是调用Future的cancel方法（改变任务状态），若任务正在执行，传入true将会interrupt任务，false将使任务执行完毕
  11、内存优化--内存泄露的排查
  12、Activity启动模式（使用场景）
  13、进程间通信方式，各种方式的优缺点（效率、安全性等），Binder机制；Intent传值只能进行单向传递，Messenger只能串行处理数据，并发量大时不好，Binder线程池防止ANR；Socket通信；
  对面试官的面试体验很好，但是很多知识点都不知道，知识点考察的比较多

面试6（南方智能）：
  1、Flutter（使用flutter）；
  2、地图绘制相关（自定义图层、service等）；
  3、数据库操作，异步、外部数据库、大数据的处理；
  4、图片使用的注意事项；
  面试官--HR全流程；
  面试官人挺好，技术也比较深入，考虑问题的角度等

面试7（心娱）：
  1、事件传递流程；
  2、ANR的处理情况，具体实例；
  3、MVVM、MVP；
  4、多线程，线程创建方式、sleep、wait区别；
  5、内存泄露排查；
  6、单例模式，设计模式的好处；
  7、EventBus原理；
  8、对加载图片的优化；
  1面、2面、HR面；
  2面要求对之前项目中所做的事情给出一个量化指标，数字等，对此没答好，可能会挂掉；

面试8（艺创网）：
  1、View绘制；
  2、事件传递流程；
  3、Retrofit；
  4、RxJava、Dragger；
  要求很低，急着招人，对学校很认可；有可能对交流方面不满意？

 面试9（云米科技）：
  1面、项目、Java基础、多线程、内存优化；
  2面、项目、之前的ANR处理、框架、全埋点、上一家离职情况、自定义View；AOP
  HR面、工作经历、为什么离职、工作氛围的要求、工作环境；
  2面的时候表述不流畅、有卡顿、很多东西没有说全面、思维跟不上了；HR面对离职原因的考虑、工作环境、稳定性；
  HR面挂了，说是不适应加班，沟通待加强

  回答问题的时候首先要问清楚问题，对问题要尽可能多且全面地回答，不要想着面试官来追问，回答问题要条理清晰，不要翻来覆去的重复某个点

面试10（朋糖）：
  1、Java基础（访问修饰符、多态等）；
  2、反射机制；
  3、多线程；
  4、Activity启动模式；
  5、Activity生命周期（A启动B的生命周期）；
  6、事件传递机制；
  7、Handler机制；
  8、View绘制；
  9、动画；
  10、几万个红包动画效果的优化（自定义View实现动画，属性动画setValue计算内部红包的移动位置）；
  11、事件穿透（上层View可绘制同时下面的List可滑动）；
  拿到的第一个OFFER

面試11（騰訊）：
    Android、Java、計算機
    1、講項目（項目中最難的點，設計思路、處理問題的手段等）；
    2、Android開源庫，MVP、MVVM架構模式、對開源庫的了解；
    3、Glide（緩存，可緩存多少圖片等）、Okhttp、Retrofit、LeakCanary（如何實現非侵入式的監控）等；
    4、Handler（沒有消息時如何實現等待）；
    5、如何綫程同步（wait、join、CountDownLatch？）；
    6、Java垃圾回收機制（GC root對象等）；
    7、HashMap内部數據結構，綫程安全等；
    8、Concurrent包，ConcurrentMap如何實現綫程安全；
    9、鎖，可重入鎖、複製鎖、等的原理；
    10、綫程池的使用，綫程數量的考慮；
    11、性能優化：内存優化、卡頓優化等；
    12、Binder如何實現一次數據拷貝；
    13、OSI 5層模型（數據報的傳輸流程）；
    14、TCP如何可靠傳輸；
    15、設計模式，源碼中的設計模式；
    面試體驗還好，沒有想著會有二面的機會。。。，以往項目太簡單，沒有需要特別值得講解的地方

  對第一個項目的總結：
    業務簡單，沒什麽可講的；
    主要考慮的點在于怎麽設計一個好的架構，通用性、可擴展性、穩定性；
    架構考慮的點：接口的統一處理（錯誤碼轉換、500等的統一提示）、
        無數據頁面的統一處理、loading彈框的統一處理（是否彈框、多個接口復用一個loading的情況等）、
        Fragment嬾加載、多個Fragment的内存占用情況、一些功能的啓用開關、日志等；

    了解：全埋點、可配置、A/B test等；
    單元測試、儀器化測試；