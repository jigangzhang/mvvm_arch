apply plugin: 'com.god.plugin'
apply plugin: 'com.android.application'
apply plugin: 'com.tencent.matrix-plugin'

matrix {
    trace {
//        enable = true     //if you don't want to use trace canary, set false
        baseMethodMapFile = "${project.buildDir}/matrix_output/Debug.methodmap"
        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
    }
}

android {
    def prop = new Properties()
    def dis = project.rootProject.file('local.properties').newDataInputStream()
    prop.load(dis)
    def storePath = prop.getProperty('keystore.path')
    signingConfigs {
        release {
            if (storePath != null) {
                storeFile file(storePath)
                storePassword prop.getProperty('keystore.password')
                keyAlias prop.getProperty('keystore.alias')
                keyPassword prop.getProperty('keystore.alias_password')
            }
        }
    }

    compileSdkVersion build_version.compileSdkVersion

    defaultConfig {
        applicationId "com.god.seep.mvvm"
        minSdkVersion build_version.minSdkVersion
        targetSdkVersion build_version.targetSdkVersion
        versionCode build_version.versionCode
        versionName build_version.versionName

        multiDexEnabled true
        flavorDimensions ""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            if (storePath)
                signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }

    /**
     * 多渠道包
     */
    productFlavors {
        pro {
            dimension ""
            buildConfigField "String", "environment", '"pro"'
        }
        dev {
            dimension ""
            buildConfigField "String", "environment", '"dev"'
        }
        vip {
            dimension ""
        }
        free {
            dimension ""
        }
    }

    //配置打包输出名称
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "Transfer_${defaultConfig.versionName}" +
                        "_${variant.productFlavors[0].name}_${buildType.name}.apk"
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation project(':baselib')
    implementation project(':media')

    implementation libs.constraintlayout
    implementation libs.material
    implementation libs.permissionx
}
